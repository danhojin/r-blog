<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A Hugo website</title>
    <link>https://danhojin.github.io/r-blog/</link>
    <description>Recent content on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 15 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://danhojin.github.io/r-blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>런던 폭격 - 포아송 분포</title>
      <link>https://danhojin.github.io/r-blog/2020/12/15/%EB%9F%B0%EB%8D%98-%ED%8F%AD%EA%B2%A9-%ED%8F%AC%EC%95%84%EC%86%A1-%EB%B6%84%ED%8F%AC/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/12/15/%EB%9F%B0%EB%8D%98-%ED%8F%AD%EA%B2%A9-%ED%8F%AC%EC%95%84%EC%86%A1-%EB%B6%84%ED%8F%AC/</guid>
      <description>V-1 비행 폭탄 V-1 비행 폭탄은 제2차 세계 대전에서 나치독일이 개발한 무기이다. 현대 순항 미사일의 효시로 항법 장치가 빈약하여 정밀 타격을 기대하기 어려웠지만, 여러모로 가성비 있는 로켓이었다[1]. 1944년 6월부터 9개월동안 2300개의 비행 폭탄이 런던에 떨어졌고 5500명 이상의 사망자가 발생하였다[2].
 런던 V-1 타격 데이터와 포와송 분포 교과서적으로 포아송 분포 사례로 언급되는 폭격 Clarke의 데이터[3]는 그가 사용한 폭격 지도을 얻을 수 없기 때문에 재현이 힘들었다. 두 명의 Shaw[2]는 Clarke의 분석 결과를 재현하기 위하여 2015년도에 재 출판된 지도 표시 데이터에서 표본을 추출하여 분석을 수행하였다.</description>
    </item>
    
    <item>
      <title>EstimationTools: 최대 우도 측정 R 패키지</title>
      <link>https://danhojin.github.io/r-blog/2020/12/14/maxlogl-%EC%B5%9C%EB%8C%80-%EC%9A%B0%EB%8F%84/</link>
      <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/12/14/maxlogl-%EC%B5%9C%EB%8C%80-%EC%9A%B0%EB%8F%84/</guid>
      <description>최대 우도 추정 최대 우도 추정(MLE, Maximum Likelihood Estimation)은 관측치 \(x\)가 주어졌을 때 변수 \(\mu\)를 가지는 확률 밀도 함수의 로그 값을 최대로 하는 \(\mu\)를 구하는 방법이다[1].
\(\hat \mu = \text{arg max}_\mu l_x (\mu)\)
여기에서 \(l_x (\mu) = \log f_{\mu} (x)\)이고, \(f_{\mu} (x)\)는 확률 밀도이다.
R에서 EstimationTools 패키지를 이용하여 최대 우도를 추정할 수 있다. 이 글에서는 컴퓨터 시대의 통계적 추론 책의 그림 4.1을 재현하면서 그 패키지의 사용 방법을 정리하기로 하겠다.</description>
    </item>
    
    <item>
      <title>계층적 선형 모형 - tidybayes 패키지를 이용한 베이즈 분석 입문</title>
      <link>https://danhojin.github.io/r-blog/2020/12/13/%EA%B3%84%EC%B8%B5%EC%A0%81-%EC%84%A0%ED%98%95-%EB%AA%A8%ED%98%95-tidybayes/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/12/13/%EA%B3%84%EC%B8%B5%EC%A0%81-%EC%84%A0%ED%98%95-%EB%AA%A8%ED%98%95-tidybayes/</guid>
      <description>계층적 선형 모형 계층적 선형 모형(multilevel/hierarchical linear model, HLM)은 선형 혼합 모형(linear mixed model)과 같은 수학적 전개에서 나오며 문제를 보는 관점에 따라 다르게 부른다[1]. 혼합 모형에서는 변량 인자(random factor)를 다루는데 그 효과에 대해서는 크게 관심이 없을 수 있다[2]. 계층 모형에서는 변량 인자들 사이에 포함관계가 있다고 보는 것이다. 예를 들어 어떤 학생은 학급에, 그 학급은 학교에, 그 학교는 소속 지역의 영향을 받는다고 볼 수 있다. 이런 가설은 일면 자연스럽게 보이나 통계적인 모델 수립과 그 모수를 추정하고 추론하는 것은 쉽지 않다.</description>
    </item>
    
    <item>
      <title>다구치 방법으로 회로 간 최적 결합 탐색</title>
      <link>https://danhojin.github.io/r-blog/2020/11/29/%EB%8B%A4%EA%B5%AC%EC%B9%98-%ED%9A%8C%EB%A1%9C-%EA%B2%B0%ED%95%A9/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/11/29/%EB%8B%A4%EA%B5%AC%EC%B9%98-%ED%9A%8C%EB%A1%9C-%EA%B2%B0%ED%95%A9/</guid>
      <description>다구치 방법 실험 계획 방법과 분산 분석은 제품이나 공정을 설계하고 개선하는데 적극 활용되고 있다[1, 2]. 다구치 방법은 신호 대 잡음의 비인 SN비로 손실 함수를 정의하여 제어 인자 조합의 성능을 비교할 수 있도록 한다. 실험 계획은 실험 계획법의 부분 요인 설계 등의 방법을 이용하여 세우거나, 특히 다구치 방법에서 제안하는 직교배열을 이용하여 세울 수 있다[3]. 이 글에서는 직접 회로의 최대 결합 강도를 달성하기 위하여 다구치 방법으로 설계 파라미터를 탐색해 본다[1].</description>
    </item>
    
    <item>
      <title>부분 최소 제곱 PLS 소개</title>
      <link>https://danhojin.github.io/r-blog/2020/11/20/%EB%B6%80%EB%B6%84-%EC%B5%9C%EC%86%8C-%EC%A0%9C%EA%B3%B1-pls-%EC%86%8C%EA%B0%9C/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/11/20/%EB%B6%80%EB%B6%84-%EC%B5%9C%EC%86%8C-%EC%A0%9C%EA%B3%B1-pls-%EC%86%8C%EA%B0%9C/</guid>
      <description>부분 최소 제곱 PLS 회귀 PLS(Partial Least Squares) 회귀는 주성분 분석과 다중 회귀를 결합·확장하여 개발되었다. 계량 경제 등 사회 과학 문제에 활용되기 시작하였고, 계산 화학 등 그 적용 분야가 점점 확장되어 왔다. 통상적인 다중 선형 회귀에서 다음 모델에 대하여,
\(Y = X\beta + \varepsilon\)
오차항 \(\varepsilon = Y - X \beta\)을 최소 제곱 방식으로 구한다는 것은 두 벡터의 차를 줄이는 \(\beta\)를 얻는 것이다. 개념적으로 두 벡터의 내적을 최대로 만들어도 오차항을 최소화하는 목적을 달성할 수 있다.</description>
    </item>
    
    <item>
      <title>tidymodels 프레임 내 회귀 분석 기본</title>
      <link>https://danhojin.github.io/r-blog/2020/11/19/intro-tidymodels-regression/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/11/19/intro-tidymodels-regression/</guid>
      <description>tidymodels 프레임 소개 R에는 데이터 과학에 사용되는 다양한 패키지가 존재하는데, 데이터 구조나 사용 방법이 패키지별로 각각의 원리에 의하여 파편화 되어 있다. 이를 통합하고 일관성 있는 사용자 경험을 제공하고, 예측 분석에 유용한 기능을 통합하려는 노력으로 caret 패키지가 개발되었다. 한편 데이터 과학에 유용한 패키지를 모아 공통적인 디자인 철학, 문법, 자료 구조를 공유하고자 tidyverse 패키지가 개발되었다. tidymodels 패키지는 caret의 목적을 tidyverse의 데이터 구조 및 함수형 데이터 처리 방식에 따르도록 새로이 개발한 것이다.</description>
    </item>
    
    <item>
      <title>교호 작용 선택을 위한 라소 회귀 - glinternet 소개</title>
      <link>https://danhojin.github.io/r-blog/2020/11/14/%EA%B5%90%ED%98%B8-%EC%9E%91%EC%9A%A9-%EB%9D%BC%EC%86%8C-%ED%9A%8C%EA%B7%80-glinternet-%EC%86%8C%EA%B0%9C/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/11/14/%EA%B5%90%ED%98%B8-%EC%9E%91%EC%9A%A9-%EB%9D%BC%EC%86%8C-%ED%9A%8C%EA%B7%80-glinternet-%EC%86%8C%EA%B0%9C/</guid>
      <description>glinternet 라소(lasso)나 능형 회귀(ridge regression) 방법은 glmnet 패키지에 잘 구현되어 있으며, 이를 활용하면 특징 변수의 선택을 체계적으로 수행할 수 있다[1]. 이 패키지에는 교차 검증이 구현되어 있어 라그랑주 승수(lagrange multiplier)와 MSE 평균 및 MSE의 분산 관계를 파악할 수 있다. 그리고 그 관계로부터 적절히 선택된 변수를 제안해 준다. 하지만 교호 효과가 유의하나 주 효과가 유의하지 않는 경우에 glmnet은 주 효과를 제거해 버릴 수 있어 문제가 생긴다. 일반적으로 모델 해석을 분명하게 제시하기 위해 유의하지 않더라도 주 효과를 제거하지 않는데[2], 이런 문제를 다루기 위해 glinternet 패키지가 개발되었다[3].</description>
    </item>
    
    <item>
      <title>선형 혼합 모형의 소개</title>
      <link>https://danhojin.github.io/r-blog/2020/11/09/%EC%84%A0%ED%98%95-%ED%98%BC%ED%95%A9-%EB%AA%A8%ED%98%95-%EC%86%8C%EA%B0%9C/</link>
      <pubDate>Mon, 09 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/11/09/%EC%84%A0%ED%98%95-%ED%98%BC%ED%95%A9-%EB%AA%A8%ED%98%95-%EC%86%8C%EA%B0%9C/</guid>
      <description>혼합 모형 개념의 소개: Rail - 선로 내 음파 전달 시험 당신이 어떤 중요한 실험을 준비하고 있다고 해보자. 시편 하나를 준비하는데 비용이 크게 든다면 통계적으로 유의미한 수의 시편을 확보할 수가 없다. 이렇게 준비된 시편 하나에 여러번 반복 측정을 수행해도 시편 간 측정치의 차이가 시편 내 측정치의 차이보다 더 큰 경우가 생길 수 있다. 이와 같이 데이터의 구조는 일원배치 분산 분석(one-way anova)과 비슷하나 처치의 효과에는 관심이 없을 때 혼합 모형이 작동한다.</description>
    </item>
    
    <item>
      <title>선형 회귀 모형의 변수 선택: F-검정</title>
      <link>https://danhojin.github.io/r-blog/2020/10/29/%EC%84%A0%ED%98%95-%ED%9A%8C%EA%B7%80-%EB%AA%A8%ED%98%95-%EB%B3%80%EC%88%98-f-%EA%B2%80%EC%A0%95/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/2020/10/29/%EC%84%A0%ED%98%95-%ED%9A%8C%EA%B7%80-%EB%AA%A8%ED%98%95-%EB%B3%80%EC%88%98-f-%EA%B2%80%EC%A0%95/</guid>
      <description>다중 선형 회귀에서 특징 변수 선택 선형 회귀에서 오컴의 면도날 원리는 경쟁하는 모형 혹은 모델 간에 보다 적은 수의 특징 변수를 가진 모형을 선택하는 것이 낫다는 것으로 풀어볼 수 있다. 이 원리는 과적합 문제와 연관된다. 데이터 과학에서 가장 주의해야 할 것이 과적합인데 특징 변수가 많을 수록 그 위험이 커지기 때문이다. 지금까지 보지 못 한 새로운 데이터가 등장하였을 때 특히 문제가 된다. 오컴의 면도날 원리를 적용하기 위해서는 특징 변수를 제거해도 회귀 성능이 크게 손상되지 않는다는 점을 확인할 필요가 있다.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://danhojin.github.io/r-blog/about/</link>
      <pubDate>Thu, 05 May 2016 21:48:51 -0700</pubDate>
      
      <guid>https://danhojin.github.io/r-blog/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
  </channel>
</rss>
